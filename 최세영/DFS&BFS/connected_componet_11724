

def dfs(graph, v, visited):
    visited[v] = 1
    # print(v)
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

# n = int(input())
# m = int(input())

n, m = map(int, input().split())

data = [[] for i in range(n+1)]
for i in range(m):
    cache = list(map(int, input().split(' ')))
    parent = cache[0]
    child = cache[1]

    data[parent].append(child)
    data[child].append(parent)
# print(data)

visit = [0 for i in range(n+1)]

count = 0
for i in range(1, n+1):
    if sum(visit) != n and visit[i] != 1:
        dfs(data, i, visit)
        count += 1

print(count)
