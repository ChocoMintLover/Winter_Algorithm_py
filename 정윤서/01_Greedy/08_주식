# [Baekjoon - 11501] 주식

| https://www.acmicpc.net/problem/11501 |
| --- |
| 홍준이는 요즘 주식에 빠져있다. 그는 미래를 내다보는 눈이 뛰어나, 날 별로 주가를 예상하고 언제나 그게 맞아떨어진다. 매일 그는 아래 세 가지 중 한 행동을 한다.
1. 주식 하나를 산다.
2. 원하는 만큼 가지고 있는 주식을 판다.
3. 아무것도 안한다.
홍준이는 미래를 예상하는 뛰어난 안목을 가졌지만, 어떻게 해야 자신이 최대 이익을 얻을 수 있는지 모른다. 따라서 당신에게 날 별로 주식의 가격을 알려주었을 때, 최대 이익이 얼마나 되는지 계산을 해달라고 부탁했다.

예를 들어 날 수가 3일이고 날 별로 주가가 10, 7, 6일 때, 주가가 계속 감소하므로 최대 이익은 0이 된다. 그러나 만약 날 별로 주가가 3, 5, 9일 때는 처음 두 날에 주식을 하나씩 사고, 마지막날 다 팔아 버리면 이익이 10이 된다. |

| 입력 |
| --- |
| 입력의 첫 줄에는 테스트케이스 수를 나타내는 자연수 T가 주어진다. 각 테스트케이스 별로 첫 줄에는 날의 수를 나타내는 자연수 N(2 ≤ N ≤ 1,000,000)이 주어지고, 둘째 줄에는 날 별 주가를 나타내는 N개의 자연수들이 공백으로 구분되어 순서대로 주어진다. 날 별 주가는 10,000이하다. |

| 출력 |
| --- |
| 각 테스트케이스 별로 최대 이익을 나타내는 정수 하나를 출력한다. 답은 부호있는 64bit 정수형으로 표현 가능하다. |

---

## 코드

```python
import sys

def Input():
    t = int(sys.stdin.readline().strip())
    stock = []
    for i in range(t):
        n = int(sys.stdin.readline().strip())
        lt = list(map(int, sys.stdin.readline().split()))
        stock.append(lt)
    return stock

def determining(stock):
    profit = []
    for lt in stock:
        buy = []
        temp = []
        for i in range(len(lt)):
            if i != len(lt) - 1:
                if lt[i] <= lt[i+1]:
                    buy.append(lt[i])
                else:
                    temp.append(lt[i]*len(buy)-sum(buy))
                    buy.clear()
            else:
                if lt[i] >= lt[i-1]:
                    temp.append(lt[i]*len(buy)-sum(buy))
        profit.append(sum(temp))
    return profit

def main():
    stock = Input()
    profit = determining(stock)
    for i in profit:
        print(i)

main()
```

---

## 설명

주가를 보고 상승하는 구간을 찾는다. 그 구간에서는 계속 사다가 상승하다가 하락하는 때에 판다.

**문제를 틀렸는데 이유를 찾지 못했다ㅠㅠ**

---

## **소요 시간**

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8c1ceabb-234d-4d70-a30e-c0717648f4d4/Untitled.png)

1:08:45:10
