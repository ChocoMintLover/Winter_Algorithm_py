from collections import deque


def island(x, y):
    queue = deque()
    queue.append((x,y))
    count = 0
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            next_x = x + dx[i]
            next_y = y + dy[i]
            if next_x < 0 or next_x >= n or next_y < 0 or next_y >= m:
                continue
            if graph[next_x][next_y] == 1:
                # visited[next_y][next_x] = 1
                queue.append((next_x, next_y))
                graph[next_x][next_y] = graph[x][y] + 1
                count += 1
    return graph[n-1][m-1]


dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]


n, m = map(int, input().split())
graph = []


for i in range(n):
    graph.append(list(map(int, input())))
# visited = arr[:]
# print(arr)

print(island(0,0))
