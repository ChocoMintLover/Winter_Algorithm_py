# [Baekjoon - 12018] Yonsei TOTO

| https://www.acmicpc.net/problem/12018 |
| --- |
| 연세대학교 수강신청이 얼마 전부터 바뀌어, 마일리지 제도로 바뀌었다. 이 제도는 각각의 학생들에게 마일리지를 주어 듣고 싶은 과목에 마일리지를 과목당 1~36을 분배한다. 그리고 모두 분배가 끝이 나면 과목에 대해서 마일리지를 많이 투자한 순으로 그 과목의 수강인원만큼 신청되는 방식이다.
성준이는 연세대학교 재학 중인 학생이다. 성준이는 저번 수강신청에서 실패하여 휴학을 했기 때문에 이번 수강신청만은 필사적으로 성공하려고 한다. 그래서 성준이는 학교 홈페이지를 뚫어버렸다.
그 덕분에 다른 사람들이 신청한 마일리지를 볼 수 있게 되었다. 성준이는 주어진 마일리지로 최대한 많은 과목을 신청하고 싶어 한다. (내가 마일리지를 넣고 이후에 과목을 신청하는 사람은 없다) 마일리지는 한 과목에 1에서 36까지 넣을 수 있다. |

| 입력 |
| --- |
| 첫째 줄에 주어진 마일리지로 최대로 들을 수 있는 과목 개수를 출력한다.첫째 줄에는 과목 수 n (1 ≤ n ≤ 100)과 주어진 마일리지 m (1 ≤ m ≤ 100)이 주어진다. 각 과목마다 2줄의 입력이 주어지는데 첫째 줄에는 각 과목에 신청한 사람 수 Pi과 과목의 수강인원 Li이 주어지고 그 다음 줄에는 각 사람이 마일리지를 얼마나 넣었는지 주어진다. (1 ≤ Pi ≤100, 1 ≤ Li ≤ 100)

(단 마일리지가 같다면 성준이에게 우선순위가 주어진다고 하자.) |

| 출력 |
| --- |
| 첫째 줄에 주어진 마일리지로 최대로 들을 수 있는 과목 개수를 출력한다. |

---

## 코드

```python
import copy

def Input():
    n, m = map(int, input().split())
    enrolment1 = 0 # 무조건 수강신청 됨
    enrolment2 = [] # 전략적으로 해야 됨
    for i in range(n):
        p, l = list(map(int, input().split()))
        if p < l:
            lt = list(map(int, input().split()))
            enrolment1 += 1
        else:
            lt = [p-l]
            lt += list(map(int, input().split()))
            enrolment2.append(lt)
    return m, enrolment1, enrolment2

def selectMileages(m, enrolment1, enrolment2):
    # 무조건 수강신청 되는 것들은 1점 배팅
    m -= enrolment1
    mileages = []
    for i in range(len(enrolment2)):
        have_to_remove = enrolment2[i][0]
        lt = copy.deepcopy(enrolment2[i][1:])
        lt.sort(reverse=True)
				# 수강신청 가능한 최소 마일리지 배팅
        mileages.append(lt[-have_to_remove-1])
    return m, mileages

def betting(m, mileages):
    mileages.sort()
    i = 0
    while True:
        m -= mileages[i]
        if m <= 0:
            return i
        elif i == len(mileages) - 1:
            return i
        else:
            i += 1
    
def main():
    m, enrolment1, enrolment2 = Input()
    m, mileages = selectMileages(m, enrolment1, enrolment2)
    ans = betting(m, mileages) + enrolment1
    print(ans)

main()
```

---

## 설명

2023.01.02 기준으로 틀렸다.

~~제껴야 하는 마지막 사람이 베팅한 마일리지 저 부분을 잘못한 듯.~~

selectMileages() 함수에서 신청 인원이 수강 인원 이상인 과목들의 마일리지 리스트를 내림차순으로 정렬한 뒤, 수강신청 가능한 최소 마일리지를 배팅하는 것으로 수정했는데도 틀렸다.

---

## **소요 시간**

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/23cc300b-b8cd-4a94-95a0-e1a6835e4254/Untitled.png)

2023.01.02 기준

+12:10:39

2023.01.04 기준
